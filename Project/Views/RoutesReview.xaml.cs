using Project.Modals;
using Project.Model;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace Project.Views
{
    /// <summary>
    /// Interaction logic for RoutesReview.xaml
    /// </summary>
    public partial class RoutesReview : UserControl
    {

        ObservableCollection<Route> Routes = new ObservableCollection<Route>();

        ObservableCollection<TrainStation> Stations = new ObservableCollection<TrainStation>();

        public RoutesReview()
        {
            InitializeComponent();
        }

        public void TableRoutesLoad(object sender, RoutedEventArgs e)
        {
            fillRoutesTable();
        }

        public void fillRoutesTable()
        {
            MainWindow window = (MainWindow)Window.GetWindow(this);
            Routes = new ObservableCollection<Route>(window.systemEntities.systemRoutes);
            tableRoutes.ItemsSource = Routes;
            Stations = new ObservableCollection<TrainStation>(window.systemEntities.systemTrainStations);
            startingStation.ItemsSource = Stations;
            endingStation.ItemsSource = Stations;
        }

        private void tableRoutes_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if (e.Column.Header.ToString() == "StartingStation")
            {
                e.Column.Header = "Početna stanica ";
            }
            if (e.Column.Header.ToString() == "EndingStation")
            {
                e.Column.Header = "Krajnja stanica ";
            }
            if (e.Column.Header.ToString() == "Stations")
            {
                e.Column.Visibility = Visibility.Hidden;
            }
            if (e.Column.Header.ToString() == "Id")
            {
                e.Column.Visibility = Visibility.Hidden;
            }
        }

        public void ShowAllRoutes(object sender, RoutedEventArgs e)
        {
            fillRoutesTable();
        }

        private void tableRoutes_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                if (item.Header.ToString() == "Detaljnije")
                {
                    item.DisplayIndex = grid.Columns.Count - 1;
                    break;
                }
            }
        }

        public void tableStations_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if (e.Column.Header.ToString() == "Name")
            {
                e.Column.Header = "Stanice";
            }
            if (e.Column.Header.ToString() == "Id")
            {
                e.Column.Visibility = Visibility.Hidden;
            }
        }

        public void ShowDetailsForRoute(object sender, RoutedEventArgs e)
        {
            MainWindow window = (MainWindow)Window.GetWindow(this);
            Route selectedRoute = ((FrameworkElement)sender).DataContext as Route;
            ObservableCollection<TrainStation> trainStations = new ObservableCollection<TrainStation>();
            trainStations.Add(selectedRoute.StartingStation);
            foreach (TrainStation trainStation in selectedRoute.Stations) trainStations.Add(trainStation);
            trainStations.Add(selectedRoute.EndingStation);
            stations.ItemsSource = trainStations;
            stations.Visibility = Visibility.Visible;
            tableRoutes.Visibility = Visibility.Hidden;
            back.Visibility = Visibility.Visible;
        }

        public void SearchRoutes(object sender, RoutedEventArgs e)
        {
            if (startingStation.SelectedItem != null || endingStation.SelectedItem != null)
            {
                ObservableCollection<Route> notMade = new ObservableCollection<Route>();
                if (startingStation.SelectedItem != null)
                    foreach (Route route in Routes)
                    {
                        if (!route.StartingStation.Equals(startingStation.SelectedItem) && !notMade.Contains(route)) notMade.Add(route);
                    }
                if (endingStation.SelectedItem != null)
                    foreach (Route route in Routes)
                    {
                        if (!route.EndingStation.Equals(endingStation.SelectedItem) && !route.Stations.Contains(endingStation.SelectedItem) && !notMade.Contains(route)) notMade.Add(route);
                    }
                foreach (Route route in notMade) Routes.Remove(route);
            }
            else
            {
                Error error = new Error("Niste uneli nijedan kriterijum za pretraživanje!");
                error.ShowDialog();
            }
        }

        public void ResetSearch(object sender, RoutedEventArgs e)
        {
            MainWindow window = (MainWindow)Window.GetWindow(this);
            Routes = new ObservableCollection<Route>(window.systemEntities.systemRoutes);
            tableRoutes.ItemsSource = Routes;
            startingStation.SelectedItem = null;
            endingStation.SelectedItem = null;
        }

        public void BackOnSearch(object sender, RoutedEventArgs e)
        {
            stations.Visibility = Visibility.Hidden;
            tableRoutes.Visibility = Visibility.Visible;
            back.Visibility = Visibility.Hidden;
        }
    }
}
